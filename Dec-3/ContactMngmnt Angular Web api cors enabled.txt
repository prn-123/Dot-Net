*************ERROR OCCURS IN WEBAPI***********

Paste in APP_START
------------------------------------------------------
webapiCofig.ts
......................................................
var json = config.Formatters.JsonFormatter;
json.SerializerSettings.PreserveReferencesHandling =Newtonsoft.Json.PreserveReferencesHandling.Objects;
config.Formatters.Remove(config.Formatters.XmlFormatter);





Need to enabl cors in web api project 
appstrat>webapi.config>

var cors = new EnableCorsAttribute("*", "*", "*");
config.EnableCors(cors);





bootstrap ===> goto bootstrap documentation and copy this
===>
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/
bootstrap.min.css" integrity="sha384-MCw98/
SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<===
paste in index.html




class-Contact.ts
================
----------------


export class Contact {
  ContactId: number;
  ContactName: string;
  Location: string;
}




app.module.ts
=============

import { BrowserModule } from '@angular/platform-browser';
import { NgModule, Component } from '@angular/core';
import { HttpClientModule} from '@angular/common/http';
import {RouterModule} from '@angular/router';
import {FormsModule} from '@angular/forms';

import { AppComponent } from './app.component';
import { ContactComponent } from './contact/contact.component';
import { ContactService } from './contact.service';
import { ContactDetailComponent } from './contact-detail/contact-detail.component';
import { ContactInsertComponent } from './contact-insert/contact-insert.component';

@NgModule({
  declarations: [
    AppComponent,
    ContactComponent,
    ContactDetailComponent,
    ContactInsertComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule,
    FormsModule,
    RouterModule.forRoot([{path: 'contacts', component: ContactComponent},
    {path: 'detail/:id', component: ContactDetailComponent},
    {path: 'insert', component: ContactInsertComponent}])
  ],
  providers: [ContactService],
  bootstrap: [AppComponent]
})
export class AppModule { }




contact.service.ts
==================

import { Injectable } from '@angular/core';
import {HttpClient, HttpHeaders} from '@angular/common/http';
import {Observable} from 'rxjs';
import { Contact } from './contact';


@Injectable({
  providedIn: 'root'
})
export class ContactService {

  contact: Contact;
  contacts: Contact[];

  constructor(private http: HttpClient) { }

  getContactsSer(): Observable<Contact[]> {
    return this.http.get<Contact[]>('http://localhost:58977/api/Contacts');
  }

  getDetailContact(id: number): Observable<Contact> {
    return this.http.get<Contact>('http://localhost:58977/api/Contacts/' + id);
  }

  saveData(contact: Contact): Observable<Contact> {
    const header = new HttpHeaders({'Content-Type': 'application/json'});
    return this.http.post<Contact>('http://localhost:58977/api/Contacts', contact, {headers: header});
  }
}





contact.component.ts
====================


import { ContactService } from './../contact.service';
import { Component, OnInit } from '@angular/core';
import { Contact } from '../contact';

@Component({
  selector: 'app-contact',
  templateUrl: './contact.component.html',
  styleUrls: ['./contact.component.css']
})
export class ContactComponent implements OnInit {

  contacts: Contact[];
  constructor(private contactServive: ContactService) { }

  ngOnInit() {
    this.contactServive.getContactsSer().subscribe(cont => this.contacts = cont);
  }

}




contact.component.html
=======================


<div>
  <ul *ngFor = "let c of contacts">
    <li>
      <a routerLink ="/detail/{{c.ContactId}}">{{c.ContactName}}</a>
    </li>
  </ul>
</div>
<router-outlet></router-outlet>

{{contacts|json}}




contact-detail.component.ts
===========================


import { Component, OnInit } from '@angular/core';
import { ContactService } from '../contact.service';
import { ActivatedRoute } from '@angular/router';
import { Contact } from '../contact';

@Component({
  selector: 'app-contact-detail',
  templateUrl: './contact-detail.component.html',
  styleUrls: ['./contact-detail.component.css']
})
export class ContactDetailComponent implements OnInit {

  contact: Contact;
  constructor(private contactservice: ContactService, private route: ActivatedRoute) { }

  ngOnInit() {
    const id = +this.route.snapshot.paramMap.get('id');
    this.contactservice.getDetailContact(id).
    subscribe(c => this.contact = c);

  }

}



contact-detail.component.html
=============================

<div>{{contact.ContactId}}</div>
<div>{{contact.ContactName}}</div>
<div>{{contact.Location}}</div>




contact-insert.component.ts
===========================


  import { Component, OnInit } from '@angular/core';
  import { Contact } from '../contact';
  import { ContactService } from '../contact.service';

  @Component({
    selector: 'app-contact-insert',
    templateUrl: './contact-insert.component.html',
    styleUrls: ['./contact-insert.component.css']
  })
  export class ContactInsertComponent implements OnInit {

    constructor(private contactservice: ContactService) { }


    contact: Contact;
    contacts: Contact[];
    ngOnInit() {
        this.newBatch();
        this.getContacts();
      }

    newBatch(): void {
        this.contact = {
          ContactId: null,
          ContactName: '',
          Location: ''
        };
    }

    getContacts(): void {
      this.contactservice.getContactsSer()
      .subscribe(contacts => this.contacts = contacts);
       }


    saveContactData(): void {
      console.log('Save Contact Data');
      this.contactservice.saveData(this.contact)
      .subscribe(b => this.contacts.push(b));
      }
  }





contact-insert.component.html
=============================

<div>
  <label>Contact Name</label>
  <input id="contactName" [(ngModel)]="contact.ContactName" type="text" >
</div>
<div>
  <label>Location</label>
  <input id="location" [(ngModel)]="contact.Location" type="text" >
</div>
<input type="button" (click)="saveContactData()" value="save">

<br/>
<br/>
<br/>





<div class="table-responsive">
<table  class="table">
  <thead>
    <tr>
      <th>Contact Name</th>
      <th>Location</th>
    </tr>
  </thead>
  <tbody>
  <tr *ngFor="let item of contacts">
       <td>{{item.ContactName}}</td>
       <td>{{item.Location}}</td>
      </tr>
</tbody>
</table>
</div>





